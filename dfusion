#!/usr/bin/env python3

# cli.py
import click
from gql import gql, Client
from gql.transport.requests import RequestsHTTPTransport


URL_THE_GRAPH = 'https://api.thegraph.com/subgraphs/name/gnosis/dfusion'
RETRIES = 3
TRADE_FIELDS = '''\
  owner { id}
  order { orderId }
  tradeBatchId'''  
SEPARATOR = '----------------------------'

_transport = RequestsHTTPTransport(
    url=URL_THE_GRAPH,
    use_json=True
)

client = Client(
    retries=RETRIES,
    transport=_transport
)

@click.group()
def main():
    """
    dFusion CLI âœ¨
    """
    pass

@main.command()
@click.option('--first', default=10, help='Number of trades to return, used for pagination')
@click.option('--skip', default=0, help='Number of trades to skip, used for pagination')
@click.option('--sort', default="tradeBatchId", help='Sort result by a field, used for pagination')
@click.option('--format', default="pretty", help='Format type i.e. pretty, csv')
@click.option('-v', '--verbose', count=True)
@click.option('--trader', help='Ethereum address of the trader')
def trades(first, skip, sort, format, verbose, trader):
    """Get trades"""
    if trader:
      filters = ', where: { owner:"%s"}' % (trader)
    else:
      filters = ''

    query = '''
    {
      trades (first: %s , skip: %s, orderBy: %s%s) {
        %s
      }
    }
    ''' %(first, skip, sort, filters, TRADE_FIELDS)

    if verbose > 0:
      click.echo('%s\n%s\n%s' % (SEPARATOR, query, SEPARATOR))

    result = client.execute(gql(query))
    for trade in result['trades']:
      _print_trade(trade, format)

def _print_trade(trade, format):
  if format == 'pretty':    
    _print_trade_pretty(trade)
  elif format == 'pretty':
    _print_trade_pretty(trade)
  else:
    raise Exception('Format "%s" is not supported. Supported formats are: pretty, csv' % (format))  

def _print_trade_pretty(trade):
  owner_address = trade['owner']['id']
  order_id = trade['order']['orderId']
  tradeBatchId = trade['tradeBatchId']
  click.echo('''\
Trader: %s
Order Id: %s
Batch Id: %s

%s  
  ''' % (owner_address, order_id, tradeBatchId, SEPARATOR))
  

def _print_trade_csv(trade):
  click.echo("Not implemented yet")

if __name__ == "__main__":
    main()